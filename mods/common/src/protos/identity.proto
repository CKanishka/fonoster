/*
 * Copyright (C) 2024 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/fonoster
 *
 * This file is part of Fonoster
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package fonoster.identity.v1beta2;

service Identity {
  rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse) {}
  rpc DeleteGroup (DeleteGroupRequest) returns (DeleteGroupResponse) {}
  rpc GetGroup (GetGroupRequest) returns (GetGroupResponse) {}
  rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {}
  rpc UpdateGroup (UpdateGroupRequest) returns (UpdateGroupResponse) {}
  rpc AddUserToGroup (AddUserToGroupRequest) returns (AddUserToGroupResponse) {}
  rpc RemoveUserFromGroup (RemoveUserFromGroupRequest) returns (RemoveUserFromGroupResponse) {}
  rpc ResendGroupMembershipInvitation (ResendGroupMembershipInvitationRequest) returns (ResendGroupMembershipInvitationResponse) {}
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {}
  rpc GetUserById (GetUserByIdRequest) returns (GetUserByIdResponse) {}
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc ExchangeCredentials (ExchangeCredentialsRequest) returns (ExchangeCredentialsResponse) {}
  rpc ExchangeAPIKey (ExchangeAPIKeyRequest) returns (ExchangeAPIKeyResponse) {}
  rpc ExchangeOAuth2Code (ExchangeOAuth2CodeRequest) returns (ExchangeOAuth2CodeResponse) {}
  rpc ExchangeRefreshToken (ExchangeRefreshTokenRequest) returns (ExchangeRefreshTokenResponse) {}
  rpc RevokeToken (RevokeTokenRequest) returns (RevokeTokenResponse) {}
}

// Group Resources

message CreateGroupRequest {
  string name = 1;
}

message CreateGroupResponse {
  string id = 1;
}

message DeleteGroupRequest {
  string id = 1;
}

message DeleteGroupResponse {
  string id = 1;
}

message GetGroupRequest {
  string id = 1;
}

message GetGroupResponse {
  string id = 1;
  string name = 2;
  string owner_id = 3;
  string created_at = 4;
  string updated_at = 5;
}

message ListGroupsRequest {
  string page_token = 1;
  int32 page_size = 2;
}

message ListGroupsResponse {
  repeated Group groups = 1;
  string next_page_token = 2;
}

message UpdateGroupRequest {
  string id = 1;
  string name = 2;
}

message UpdateGroupResponse {
  string id = 1;
}

message AddUserToGroupRequest {
  string user_id = 1;
  string group_id = 2;
}

message AddUserToGroupResponse {
  string user_id = 1;
  string group_id = 2;
}

message RemoveUserFromGroupRequest {
  string user_id = 1;
  string group_id = 2;
}

message RemoveUserFromGroupResponse {
  string user_id = 1;
  string group_id = 2;
}

message ResendGroupMembershipInvitationRequest {
  string user_id = 1;
  string group_id = 2;
}

message ResendGroupMembershipInvitationResponse {
  string user_id = 1;
  string group_id = 2;
}

// User Resources

message CreateUserRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string avatar = 4;
}

message CreateUserResponse {
  string id = 1;
}

message GetUserByIdRequest {
  string id = 1;
}

message GetUserByIdResponse {
  string id = 1;
  string email = 2;
  string name = 3;
  string avatar = 4;
  string created_at = 5;
  string updated_at = 6;
}

message UpdateUserRequest {
  string id = 1;
  string password = 2;
  string name = 3;
  string avatar = 4;
}

message UpdateUserResponse {
  string id = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  string id = 1;
}

message Group {
  string id = 1;
  string name = 2;
  string owner_id = 3;
  string created_at = 4;
  string updated_at = 5;
}

// Token Exchange Resources

message ExchangeCredentialsRequest {
  string username = 1;
  string password = 2;
  // Optional code for multi-factor authentication
  string ephemeral_code = 3;
}

message ExchangeCredentialsResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message ExchangeAPIKeyRequest {
  string api_key = 1;
}

message ExchangeAPIKeyResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message ExchangeOAuth2CodeRequest {
  string code = 1;
}

message ExchangeOAuth2CodeResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message ExchangeRefreshTokenRequest {
  string refresh_token = 1;
}

message ExchangeRefreshTokenResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message RevokeTokenRequest {
  string token = 1;
}

message RevokeTokenResponse {
  string token = 1;
}
