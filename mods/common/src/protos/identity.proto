/*
 * Copyright (C) 2024 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/fonoster
 *
 * This file is part of Fonoster
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package fonoster.identity.v1beta2;

service Identity {
  // Workspace actions
  rpc CreateWorkspace (CreateWorkspaceRequest) returns (CreateWorkspaceResponse) {}
  rpc DeleteWorkspace (DeleteWorkspaceRequest) returns (DeleteWorkspaceResponse) {}
  rpc GetWorkspace (GetWorkspaceRequest) returns (Workspace) {}
  rpc ListWorkspaces (ListWorkspacesRequest) returns (ListWorkspacesResponse) {}
  rpc UpdateWorkspace (UpdateWorkspaceRequest) returns (UpdateWorkspaceResponse) {}
  rpc InviteUserToWorkspace (InviteUserToWorkspaceRequest) returns (InviteUserToWorkspaceResponse) {}
  rpc RemoveUserFromWorkspace (RemoveUserFromWorkspaceRequest) returns (RemoveUserFromWorkspaceResponse) {}
  rpc ResendWorkspaceMembershipInvitation (ResendWorkspaceMembershipInvitationRequest) returns (ResendWorkspaceMembershipInvitationResponse) {}
  
  // User specific actions
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {}
  rpc GetUser (GetUserRequest) returns (GetUserResponse) {}
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {}
  
  // APIKey actions
  rpc CreateAPIKey (CreateAPIKeyRequest) returns (CreateAPIKeyResponse) {}
  rpc DeleteAPIKey (DeleteAPIKeyRequest) returns (DeleteAPIKeyResponse) {}
  rpc ListAPIKeys (ListAPIKeysRequest) returns (ListAPIKeysResponse) {}
  rpc RegenerateAPIKey (RegenerateAPIKeyRequest) returns (RegenerateAPIKeyResponse) {}

  // Token exchange actions
  rpc ExchangeCredentials (ExchangeCredentialsRequest) returns (ExchangeCredentialsResponse) {}
  rpc ExchangeAPIKey (ExchangeAPIKeyRequest) returns (ExchangeAPIKeyResponse) {}
  rpc ExchangeOAuth2Code (ExchangeOAuth2CodeRequest) returns (ExchangeOAuth2CodeResponse) {}
  rpc ExchangeRefreshToken (ExchangeRefreshTokenRequest) returns (ExchangeRefreshTokenResponse) {}
  rpc RevokeToken (RevokeTokenRequest) returns (RevokeTokenResponse) {}
}

// Workspace Resources

message CreateWorkspaceRequest {
  string name = 1;
}

message CreateWorkspaceResponse {
  string ref = 1;
}

message DeleteWorkspaceRequest {
  string ref = 1;
}

message DeleteWorkspaceResponse {
  string ref = 1;
}

message GetWorkspaceRequest {
  string ref = 1;
}

message ListWorkspacesRequest {
  string page_token = 1;
  int32 page_size = 2;
}

message ListWorkspacesResponse {
  repeated Workspace workspaces = 1;
  string next_page_token = 2;
}

message UpdateWorkspaceRequest {
  string ref = 1;
  string name = 2;
}

message UpdateWorkspaceResponse {
  string ref = 1;
}

message InviteUserToWorkspaceRequest {
  string email = 1;
  string workspace_ref = 2;
  string role = 3;
  string name = 4;
}

message InviteUserToWorkspaceResponse {
  string user_ref = 1;
  string workspace_ref = 2;
}

message RemoveUserFromWorkspaceRequest {
  string user_ref = 1;
  string workspace_ref = 2;
}

message RemoveUserFromWorkspaceResponse {
  string user_ref = 1;
  string workspace_ref = 2;
}

message ResendWorkspaceMembershipInvitationRequest {
  string user_ref = 1;
  string workspace_ref = 2;
}

message ResendWorkspaceMembershipInvitationResponse {
  string user_ref = 1;
  string workspace_ref = 2;
}

// User Resources

message CreateUserRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string avatar = 4;
}

message CreateUserResponse {
  string ref = 1;
}

message GetUserRequest {
  string ref = 1;
}

message GetUserResponse {
  string ref = 1;
  string email = 2;
  string name = 3;
  string avatar = 4;
  int32 created_at = 5;
  int32 updated_at = 6;
}

message UpdateUserRequest {
  string ref = 1;
  string password = 2;
  string name = 3;
  string avatar = 4;
}

message UpdateUserResponse {
  string ref = 1;
}

message DeleteUserRequest {
  string ref = 1;
}

message DeleteUserResponse {
  string ref = 1;
}

message Workspace {
  string ref = 1;
  string name = 2;
  string owner_ref = 3;
  int32 created_at = 4;
  int32 updated_at = 5;
}

// APIKey Resources

message CreateAPIKeyRequest {
  string workspace_ref = 1;
  string role = 2;
  int32 expires_at = 3;
}

message CreateAPIKeyResponse {
  string ref = 1;
}

message DeleteAPIKeyRequest {
  string ref = 1;
}

message DeleteAPIKeyResponse {
  string ref = 1;
}

message ListAPIKeysRequest {
  string workspace_ref = 1;
  string page_token = 2;
  int32 page_size = 3;
}

message ListAPIKeysResponse {
  repeated APIKey items = 1;
  string next_page_token = 2;
}

message RegenerateAPIKeyRequest {
  string ref = 1;
}

message RegenerateAPIKeyResponse {
  string ref = 1;
}

message APIKey {
  string ref = 1;
  string access_key_id = 2;
  string role = 3;
  int32 expires_at = 4;
  int32 created_at = 5;
  int32 updated_at = 6;
}

// Token Exchange Resources

message ExchangeCredentialsRequest {
  string username = 1;
  string password = 2;
  // Optional code for multi-factor authentication
  string ephemeral_code = 3;
}

message ExchangeCredentialsResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message ExchangeAPIKeyRequest {
  string access_key_id = 1;
  string access_key_secret = 2;
}

message ExchangeAPIKeyResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message ExchangeOAuth2CodeRequest {
  string code = 1;
}

message ExchangeOAuth2CodeResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message ExchangeRefreshTokenRequest {
  string refresh_token = 1;
}

message ExchangeRefreshTokenResponse {
  string id_token = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message RevokeTokenRequest {
  string token = 1;
}

message RevokeTokenResponse {
  string token = 1;
}
