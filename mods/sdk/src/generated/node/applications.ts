/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: applications.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google/protobuf/struct";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace fonoster.applications.v1beta2 {
    export enum ApplicationType {
        PROGRAMMABLE_VOICE = 0
    }
    export class ProductContainer extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            product_ref?: string;
            config?: dependency_1.google.protobuf.Struct;
            credentials?: dependency_1.google.protobuf.Struct;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("product_ref" in data && data.product_ref != undefined) {
                    this.product_ref = data.product_ref;
                }
                if ("config" in data && data.config != undefined) {
                    this.config = data.config;
                }
                if ("credentials" in data && data.credentials != undefined) {
                    this.credentials = data.credentials;
                }
            }
        }
        get product_ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set product_ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get config() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Struct, 2) as dependency_1.google.protobuf.Struct;
        }
        set config(value: dependency_1.google.protobuf.Struct) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_config() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get credentials() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Struct, 3) as dependency_1.google.protobuf.Struct;
        }
        set credentials(value: dependency_1.google.protobuf.Struct) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_credentials() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            product_ref?: string;
            config?: ReturnType<typeof dependency_1.google.protobuf.Struct.prototype.toObject>;
            credentials?: ReturnType<typeof dependency_1.google.protobuf.Struct.prototype.toObject>;
        }): ProductContainer {
            const message = new ProductContainer({});
            if (data.product_ref != null) {
                message.product_ref = data.product_ref;
            }
            if (data.config != null) {
                message.config = dependency_1.google.protobuf.Struct.fromObject(data.config);
            }
            if (data.credentials != null) {
                message.credentials = dependency_1.google.protobuf.Struct.fromObject(data.credentials);
            }
            return message;
        }
        toObject() {
            const data: {
                product_ref?: string;
                config?: ReturnType<typeof dependency_1.google.protobuf.Struct.prototype.toObject>;
                credentials?: ReturnType<typeof dependency_1.google.protobuf.Struct.prototype.toObject>;
            } = {};
            if (this.product_ref != null) {
                data.product_ref = this.product_ref;
            }
            if (this.config != null) {
                data.config = this.config.toObject();
            }
            if (this.credentials != null) {
                data.credentials = this.credentials.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.product_ref.length)
                writer.writeString(1, this.product_ref);
            if (this.has_config)
                writer.writeMessage(2, this.config, () => this.config.serialize(writer));
            if (this.has_credentials)
                writer.writeMessage(3, this.credentials, () => this.credentials.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProductContainer {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProductContainer();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.product_ref = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.config, () => message.config = dependency_1.google.protobuf.Struct.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.credentials, () => message.credentials = dependency_1.google.protobuf.Struct.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ProductContainer {
            return ProductContainer.deserialize(bytes);
        }
    }
    export class Application extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
            name?: string;
            type?: ApplicationType;
            app_endpoint?: string;
            text_to_speech?: ProductContainer;
            speech_to_text?: ProductContainer;
            conversation?: ProductContainer;
            created_at?: number;
            updated_at?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("app_endpoint" in data && data.app_endpoint != undefined) {
                    this.app_endpoint = data.app_endpoint;
                }
                if ("text_to_speech" in data && data.text_to_speech != undefined) {
                    this.text_to_speech = data.text_to_speech;
                }
                if ("speech_to_text" in data && data.speech_to_text != undefined) {
                    this.speech_to_text = data.speech_to_text;
                }
                if ("conversation" in data && data.conversation != undefined) {
                    this.conversation = data.conversation;
                }
                if ("created_at" in data && data.created_at != undefined) {
                    this.created_at = data.created_at;
                }
                if ("updated_at" in data && data.updated_at != undefined) {
                    this.updated_at = data.updated_at;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 3, ApplicationType.PROGRAMMABLE_VOICE) as ApplicationType;
        }
        set type(value: ApplicationType) {
            pb_1.Message.setField(this, 3, value);
        }
        get app_endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set app_endpoint(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get text_to_speech() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 5) as ProductContainer;
        }
        set text_to_speech(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_text_to_speech() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get speech_to_text() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 6) as ProductContainer;
        }
        set speech_to_text(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_speech_to_text() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get conversation() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 7) as ProductContainer;
        }
        set conversation(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_conversation() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get created_at() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set created_at(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        get updated_at() {
            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
        }
        set updated_at(value: number) {
            pb_1.Message.setField(this, 9, value);
        }
        static fromObject(data: {
            ref?: string;
            name?: string;
            type?: ApplicationType;
            app_endpoint?: string;
            text_to_speech?: ReturnType<typeof ProductContainer.prototype.toObject>;
            speech_to_text?: ReturnType<typeof ProductContainer.prototype.toObject>;
            conversation?: ReturnType<typeof ProductContainer.prototype.toObject>;
            created_at?: number;
            updated_at?: number;
        }): Application {
            const message = new Application({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.app_endpoint != null) {
                message.app_endpoint = data.app_endpoint;
            }
            if (data.text_to_speech != null) {
                message.text_to_speech = ProductContainer.fromObject(data.text_to_speech);
            }
            if (data.speech_to_text != null) {
                message.speech_to_text = ProductContainer.fromObject(data.speech_to_text);
            }
            if (data.conversation != null) {
                message.conversation = ProductContainer.fromObject(data.conversation);
            }
            if (data.created_at != null) {
                message.created_at = data.created_at;
            }
            if (data.updated_at != null) {
                message.updated_at = data.updated_at;
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
                name?: string;
                type?: ApplicationType;
                app_endpoint?: string;
                text_to_speech?: ReturnType<typeof ProductContainer.prototype.toObject>;
                speech_to_text?: ReturnType<typeof ProductContainer.prototype.toObject>;
                conversation?: ReturnType<typeof ProductContainer.prototype.toObject>;
                created_at?: number;
                updated_at?: number;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.app_endpoint != null) {
                data.app_endpoint = this.app_endpoint;
            }
            if (this.text_to_speech != null) {
                data.text_to_speech = this.text_to_speech.toObject();
            }
            if (this.speech_to_text != null) {
                data.speech_to_text = this.speech_to_text.toObject();
            }
            if (this.conversation != null) {
                data.conversation = this.conversation.toObject();
            }
            if (this.created_at != null) {
                data.created_at = this.created_at;
            }
            if (this.updated_at != null) {
                data.updated_at = this.updated_at;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.type != ApplicationType.PROGRAMMABLE_VOICE)
                writer.writeEnum(3, this.type);
            if (this.app_endpoint.length)
                writer.writeString(4, this.app_endpoint);
            if (this.has_text_to_speech)
                writer.writeMessage(5, this.text_to_speech, () => this.text_to_speech.serialize(writer));
            if (this.has_speech_to_text)
                writer.writeMessage(6, this.speech_to_text, () => this.speech_to_text.serialize(writer));
            if (this.has_conversation)
                writer.writeMessage(7, this.conversation, () => this.conversation.serialize(writer));
            if (this.created_at != 0)
                writer.writeInt64(8, this.created_at);
            if (this.updated_at != 0)
                writer.writeInt64(9, this.updated_at);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Application {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Application();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.type = reader.readEnum();
                        break;
                    case 4:
                        message.app_endpoint = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.text_to_speech, () => message.text_to_speech = ProductContainer.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.speech_to_text, () => message.speech_to_text = ProductContainer.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.conversation, () => message.conversation = ProductContainer.deserialize(reader));
                        break;
                    case 8:
                        message.created_at = reader.readInt64();
                        break;
                    case 9:
                        message.updated_at = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Application {
            return Application.deserialize(bytes);
        }
    }
    export class CreateApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            type?: ApplicationType;
            app_endpoint?: string;
            text_to_speech?: ProductContainer;
            speech_to_text?: ProductContainer;
            intelligence?: ProductContainer;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("app_endpoint" in data && data.app_endpoint != undefined) {
                    this.app_endpoint = data.app_endpoint;
                }
                if ("text_to_speech" in data && data.text_to_speech != undefined) {
                    this.text_to_speech = data.text_to_speech;
                }
                if ("speech_to_text" in data && data.speech_to_text != undefined) {
                    this.speech_to_text = data.speech_to_text;
                }
                if ("intelligence" in data && data.intelligence != undefined) {
                    this.intelligence = data.intelligence;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 2, ApplicationType.PROGRAMMABLE_VOICE) as ApplicationType;
        }
        set type(value: ApplicationType) {
            pb_1.Message.setField(this, 2, value);
        }
        get app_endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set app_endpoint(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get text_to_speech() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 4) as ProductContainer;
        }
        set text_to_speech(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_text_to_speech() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get speech_to_text() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 5) as ProductContainer;
        }
        set speech_to_text(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_speech_to_text() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get intelligence() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 6) as ProductContainer;
        }
        set intelligence(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_intelligence() {
            return pb_1.Message.getField(this, 6) != null;
        }
        static fromObject(data: {
            name?: string;
            type?: ApplicationType;
            app_endpoint?: string;
            text_to_speech?: ReturnType<typeof ProductContainer.prototype.toObject>;
            speech_to_text?: ReturnType<typeof ProductContainer.prototype.toObject>;
            intelligence?: ReturnType<typeof ProductContainer.prototype.toObject>;
        }): CreateApplicationRequest {
            const message = new CreateApplicationRequest({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.app_endpoint != null) {
                message.app_endpoint = data.app_endpoint;
            }
            if (data.text_to_speech != null) {
                message.text_to_speech = ProductContainer.fromObject(data.text_to_speech);
            }
            if (data.speech_to_text != null) {
                message.speech_to_text = ProductContainer.fromObject(data.speech_to_text);
            }
            if (data.intelligence != null) {
                message.intelligence = ProductContainer.fromObject(data.intelligence);
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                type?: ApplicationType;
                app_endpoint?: string;
                text_to_speech?: ReturnType<typeof ProductContainer.prototype.toObject>;
                speech_to_text?: ReturnType<typeof ProductContainer.prototype.toObject>;
                intelligence?: ReturnType<typeof ProductContainer.prototype.toObject>;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.app_endpoint != null) {
                data.app_endpoint = this.app_endpoint;
            }
            if (this.text_to_speech != null) {
                data.text_to_speech = this.text_to_speech.toObject();
            }
            if (this.speech_to_text != null) {
                data.speech_to_text = this.speech_to_text.toObject();
            }
            if (this.intelligence != null) {
                data.intelligence = this.intelligence.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.type != ApplicationType.PROGRAMMABLE_VOICE)
                writer.writeEnum(2, this.type);
            if (this.app_endpoint.length)
                writer.writeString(3, this.app_endpoint);
            if (this.has_text_to_speech)
                writer.writeMessage(4, this.text_to_speech, () => this.text_to_speech.serialize(writer));
            if (this.has_speech_to_text)
                writer.writeMessage(5, this.speech_to_text, () => this.speech_to_text.serialize(writer));
            if (this.has_intelligence)
                writer.writeMessage(6, this.intelligence, () => this.intelligence.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.type = reader.readEnum();
                        break;
                    case 3:
                        message.app_endpoint = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.text_to_speech, () => message.text_to_speech = ProductContainer.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.speech_to_text, () => message.speech_to_text = ProductContainer.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.intelligence, () => message.intelligence = ProductContainer.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateApplicationRequest {
            return CreateApplicationRequest.deserialize(bytes);
        }
    }
    export class CreateApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            ref?: string;
        }): CreateApplicationResponse {
            const message = new CreateApplicationResponse({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateApplicationResponse {
            return CreateApplicationResponse.deserialize(bytes);
        }
    }
    export class GetApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            ref?: string;
        }): GetApplicationRequest {
            const message = new GetApplicationRequest({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetApplicationRequest {
            return GetApplicationRequest.deserialize(bytes);
        }
    }
    export class ListApplicationsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            page_size?: number;
            page_token?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("page_size" in data && data.page_size != undefined) {
                    this.page_size = data.page_size;
                }
                if ("page_token" in data && data.page_token != undefined) {
                    this.page_token = data.page_token;
                }
            }
        }
        get page_size() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set page_size(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get page_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set page_token(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            page_size?: number;
            page_token?: string;
        }): ListApplicationsRequest {
            const message = new ListApplicationsRequest({});
            if (data.page_size != null) {
                message.page_size = data.page_size;
            }
            if (data.page_token != null) {
                message.page_token = data.page_token;
            }
            return message;
        }
        toObject() {
            const data: {
                page_size?: number;
                page_token?: string;
            } = {};
            if (this.page_size != null) {
                data.page_size = this.page_size;
            }
            if (this.page_token != null) {
                data.page_token = this.page_token;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.page_size != 0)
                writer.writeInt32(1, this.page_size);
            if (this.page_token.length)
                writer.writeString(2, this.page_token);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListApplicationsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListApplicationsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.page_size = reader.readInt32();
                        break;
                    case 2:
                        message.page_token = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListApplicationsRequest {
            return ListApplicationsRequest.deserialize(bytes);
        }
    }
    export class ListApplicationsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            items?: Application[];
            next_page_token?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("items" in data && data.items != undefined) {
                    this.items = data.items;
                }
                if ("next_page_token" in data && data.next_page_token != undefined) {
                    this.next_page_token = data.next_page_token;
                }
            }
        }
        get items() {
            return pb_1.Message.getRepeatedWrapperField(this, Application, 1) as Application[];
        }
        set items(value: Application[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get next_page_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set next_page_token(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            items?: ReturnType<typeof Application.prototype.toObject>[];
            next_page_token?: string;
        }): ListApplicationsResponse {
            const message = new ListApplicationsResponse({});
            if (data.items != null) {
                message.items = data.items.map(item => Application.fromObject(item));
            }
            if (data.next_page_token != null) {
                message.next_page_token = data.next_page_token;
            }
            return message;
        }
        toObject() {
            const data: {
                items?: ReturnType<typeof Application.prototype.toObject>[];
                next_page_token?: string;
            } = {};
            if (this.items != null) {
                data.items = this.items.map((item: Application) => item.toObject());
            }
            if (this.next_page_token != null) {
                data.next_page_token = this.next_page_token;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.items.length)
                writer.writeRepeatedMessage(1, this.items, (item: Application) => item.serialize(writer));
            if (this.next_page_token.length)
                writer.writeString(2, this.next_page_token);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListApplicationsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListApplicationsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.items, () => pb_1.Message.addToRepeatedWrapperField(message, 1, Application.deserialize(reader), Application));
                        break;
                    case 2:
                        message.next_page_token = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListApplicationsResponse {
            return ListApplicationsResponse.deserialize(bytes);
        }
    }
    export class UpdateApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
            name?: string;
            type?: ApplicationType;
            app_endpoint?: string;
            text_to_speech?: ProductContainer;
            speech_to_text?: ProductContainer;
            intelligence?: ProductContainer;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("app_endpoint" in data && data.app_endpoint != undefined) {
                    this.app_endpoint = data.app_endpoint;
                }
                if ("text_to_speech" in data && data.text_to_speech != undefined) {
                    this.text_to_speech = data.text_to_speech;
                }
                if ("speech_to_text" in data && data.speech_to_text != undefined) {
                    this.speech_to_text = data.speech_to_text;
                }
                if ("intelligence" in data && data.intelligence != undefined) {
                    this.intelligence = data.intelligence;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 3, ApplicationType.PROGRAMMABLE_VOICE) as ApplicationType;
        }
        set type(value: ApplicationType) {
            pb_1.Message.setField(this, 3, value);
        }
        get app_endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set app_endpoint(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get text_to_speech() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 5) as ProductContainer;
        }
        set text_to_speech(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_text_to_speech() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get speech_to_text() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 6) as ProductContainer;
        }
        set speech_to_text(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_speech_to_text() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get intelligence() {
            return pb_1.Message.getWrapperField(this, ProductContainer, 7) as ProductContainer;
        }
        set intelligence(value: ProductContainer) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_intelligence() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            ref?: string;
            name?: string;
            type?: ApplicationType;
            app_endpoint?: string;
            text_to_speech?: ReturnType<typeof ProductContainer.prototype.toObject>;
            speech_to_text?: ReturnType<typeof ProductContainer.prototype.toObject>;
            intelligence?: ReturnType<typeof ProductContainer.prototype.toObject>;
        }): UpdateApplicationRequest {
            const message = new UpdateApplicationRequest({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.app_endpoint != null) {
                message.app_endpoint = data.app_endpoint;
            }
            if (data.text_to_speech != null) {
                message.text_to_speech = ProductContainer.fromObject(data.text_to_speech);
            }
            if (data.speech_to_text != null) {
                message.speech_to_text = ProductContainer.fromObject(data.speech_to_text);
            }
            if (data.intelligence != null) {
                message.intelligence = ProductContainer.fromObject(data.intelligence);
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
                name?: string;
                type?: ApplicationType;
                app_endpoint?: string;
                text_to_speech?: ReturnType<typeof ProductContainer.prototype.toObject>;
                speech_to_text?: ReturnType<typeof ProductContainer.prototype.toObject>;
                intelligence?: ReturnType<typeof ProductContainer.prototype.toObject>;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.app_endpoint != null) {
                data.app_endpoint = this.app_endpoint;
            }
            if (this.text_to_speech != null) {
                data.text_to_speech = this.text_to_speech.toObject();
            }
            if (this.speech_to_text != null) {
                data.speech_to_text = this.speech_to_text.toObject();
            }
            if (this.intelligence != null) {
                data.intelligence = this.intelligence.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.type != ApplicationType.PROGRAMMABLE_VOICE)
                writer.writeEnum(3, this.type);
            if (this.app_endpoint.length)
                writer.writeString(4, this.app_endpoint);
            if (this.has_text_to_speech)
                writer.writeMessage(5, this.text_to_speech, () => this.text_to_speech.serialize(writer));
            if (this.has_speech_to_text)
                writer.writeMessage(6, this.speech_to_text, () => this.speech_to_text.serialize(writer));
            if (this.has_intelligence)
                writer.writeMessage(7, this.intelligence, () => this.intelligence.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.type = reader.readEnum();
                        break;
                    case 4:
                        message.app_endpoint = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.text_to_speech, () => message.text_to_speech = ProductContainer.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.speech_to_text, () => message.speech_to_text = ProductContainer.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.intelligence, () => message.intelligence = ProductContainer.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UpdateApplicationRequest {
            return UpdateApplicationRequest.deserialize(bytes);
        }
    }
    export class UpdateApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            ref?: string;
        }): UpdateApplicationResponse {
            const message = new UpdateApplicationResponse({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UpdateApplicationResponse {
            return UpdateApplicationResponse.deserialize(bytes);
        }
    }
    export class DeleteApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            ref?: string;
        }): DeleteApplicationRequest {
            const message = new DeleteApplicationRequest({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteApplicationRequest {
            return DeleteApplicationRequest.deserialize(bytes);
        }
    }
    export class DeleteApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            ref?: string;
        }): DeleteApplicationResponse {
            const message = new DeleteApplicationResponse({});
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                ref?: string;
            } = {};
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ref.length)
                writer.writeString(1, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteApplicationResponse {
            return DeleteApplicationResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedApplicationsService {
        static definition = {
            CreateApplication: {
                path: "/fonoster.applications.v1beta2.Applications/CreateApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: CreateApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => CreateApplicationResponse.deserialize(new Uint8Array(bytes))
            },
            GetApplication: {
                path: "/fonoster.applications.v1beta2.Applications/GetApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: Application) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => Application.deserialize(new Uint8Array(bytes))
            },
            ListApplications: {
                path: "/fonoster.applications.v1beta2.Applications/ListApplications",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: ListApplicationsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => ListApplicationsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: ListApplicationsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => ListApplicationsResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateApplication: {
                path: "/fonoster.applications.v1beta2.Applications/UpdateApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: UpdateApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => UpdateApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: UpdateApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => UpdateApplicationResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteApplication: {
                path: "/fonoster.applications.v1beta2.Applications/DeleteApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: DeleteApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => DeleteApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: DeleteApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => DeleteApplicationResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract CreateApplication(call: grpc_1.ServerUnaryCall<CreateApplicationRequest, CreateApplicationResponse>, callback: grpc_1.sendUnaryData<CreateApplicationResponse>): void;
        abstract GetApplication(call: grpc_1.ServerUnaryCall<GetApplicationRequest, Application>, callback: grpc_1.sendUnaryData<Application>): void;
        abstract ListApplications(call: grpc_1.ServerUnaryCall<ListApplicationsRequest, ListApplicationsResponse>, callback: grpc_1.sendUnaryData<ListApplicationsResponse>): void;
        abstract UpdateApplication(call: grpc_1.ServerUnaryCall<UpdateApplicationRequest, UpdateApplicationResponse>, callback: grpc_1.sendUnaryData<UpdateApplicationResponse>): void;
        abstract DeleteApplication(call: grpc_1.ServerUnaryCall<DeleteApplicationRequest, DeleteApplicationResponse>, callback: grpc_1.sendUnaryData<DeleteApplicationResponse>): void;
    }
    export class ApplicationsClient extends grpc_1.makeGenericClientConstructor(UnimplementedApplicationsService.definition, "Applications", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        CreateApplication: GrpcUnaryServiceInterface<CreateApplicationRequest, CreateApplicationResponse> = (message: CreateApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<CreateApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<CreateApplicationResponse>, callback?: grpc_1.requestCallback<CreateApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateApplication(message, metadata, options, callback);
        };
        GetApplication: GrpcUnaryServiceInterface<GetApplicationRequest, Application> = (message: GetApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<Application>, options?: grpc_1.CallOptions | grpc_1.requestCallback<Application>, callback?: grpc_1.requestCallback<Application>): grpc_1.ClientUnaryCall => {
            return super.GetApplication(message, metadata, options, callback);
        };
        ListApplications: GrpcUnaryServiceInterface<ListApplicationsRequest, ListApplicationsResponse> = (message: ListApplicationsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<ListApplicationsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<ListApplicationsResponse>, callback?: grpc_1.requestCallback<ListApplicationsResponse>): grpc_1.ClientUnaryCall => {
            return super.ListApplications(message, metadata, options, callback);
        };
        UpdateApplication: GrpcUnaryServiceInterface<UpdateApplicationRequest, UpdateApplicationResponse> = (message: UpdateApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<UpdateApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<UpdateApplicationResponse>, callback?: grpc_1.requestCallback<UpdateApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateApplication(message, metadata, options, callback);
        };
        DeleteApplication: GrpcUnaryServiceInterface<DeleteApplicationRequest, DeleteApplicationResponse> = (message: DeleteApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<DeleteApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<DeleteApplicationResponse>, callback?: grpc_1.requestCallback<DeleteApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteApplication(message, metadata, options, callback);
        };
    }
}
